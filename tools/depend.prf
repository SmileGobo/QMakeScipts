## @module Depend
## @brief функции для подключения заивисмостей#

## @brief Установка путей заголовочных файлов
## @param 1 - Cписок путей
defineTest(SetHeadersPath){
    PATHS = $$1 
    isEmpty(PATHS){
        WARNING(SetHeadersPath: empty 1 arg)
        return (false)
    }

    for(p, PATHS){
        !contains(INCLUDEPATH, $$p){
            INCLUDEPATH += $$p
        }
    }
    export(INCLUDEPATH)
    return(true)
}

## @brief Установка путей библиотек
## @param 1 - список путей

defineTest(SetLibraryPath){
    PATHS = $$1 
    isEmpty(PATHS){
        WARNING(SetLibraryPaths: empty 1 arg)
        return (false)
    }
    for(p, PATHS){
        !contains(LIBS, -L$$p){
            LIBS += -L$$p
        }
    }
    export(LIBS)
    return (true)
}


## @brief Подключение либ
## @param 1 - список модулей
## @param 2 - суффикс модуля 
## @example
##    PMODULES = Foundation Util Net XML JSON
##    ImportModules($$PMODULES, Poco) #суффикс Poco
##    BOOST_MODULES = system asio
##    ImportModules($$BOOST_MODULES, boost_)
##
defineTest(ImportModules){

    MODULES = $$1
    PREFIX = $$2
    SUFFIX = $${3}$${LIB_SUFFIX}

    for(mod, MODULES){
        LIBS += -l$${PREFIX}$${mod}$${SUFFIX}
    }
    export(LIBS)
    return (true)
}



## @brief включение флага для экспорта библиотек библиотек 
## @example
## LIBRARY_EXPORT{
##    ... #подключаем модули, нужно для бинарников
## }
##
defineTest(EnableModuleExport){
    CONFIG += LIBRARY_EXPORT
    export(CONFIG)
}

#Выключение флага экспорта либ
defineTest(DisableModuleExport){
    CONFIG -= LIBRARY_EXPORT
    export(CONFIG)
}

#Выключение суффикса d для библиотек в режиме сборки Debug
defineTest(DisableDebugSuffix){
    LIB_SUFFIX=
    export(LIB_SUFFIX)
    return (true)
}

## @brief Включение суффикса d для библиотек в режиме сборки Debug
## Если сборка Release, проигнорируется
defineTest(EnableDebugSuffix){
    #планы на будущее
    #PREFIX = $$1
    #POSTFIX = $$2
    CONFIG(debug, debug|release) {
        LIB_SUFFIX=d
    } else {
        LIB_SUFFIX=                 #суффикс для библиотек d - для дебаг и пустой для release
    }

    export(LIB_SUFFIX)
    return(true)
}

## @brief управление группами библиотек
## @param начало конец группы (start|end)
defineTest(Group){
    !isEmpty(1){
        LIBS += $$sprintf("-Wl,--%1-group", $$1)
        export(LIBS)
        return (true)
    }
    else{
        return (false)
    }
}


## @brief добавление путей к заголовочным файлам локальных модулей проекта
## @param корень проекта
## @param список модулей (имена дирректорий от корня проекта)
defineTest(ImportLocalHeaders){
    MODS = $$2
    ROOT = $$1

    for(m, MODS){
        INC_PATH= $$clean_path($$ROOT/$$m/Module/include)
        SetHeadersPath($$INC_PATH)
    }
    return (true)
}

## @brief Фиксация зависимостей от статических библиотек внутри проекта
## При вызове этой функции начнут отслеживаться измения в смежных модулях и при
## сборке будет перелинковыватся исполняемый файл
## @param - список модулей(статических либ) проекта
## @param - префикс как ImportModules
defineTest(SetLocalDepends){
    PREFIX = $$2
    LIST = $$1
    for(module, LIST){
        lib_name = $${PREFIX}$${module}
        rslt = $$LIB_DIR/$$StaticName($$lib_name)
        PRE_TARGETDEPS += $$rslt
    }
    export (PRE_TARGETDEPS)
}