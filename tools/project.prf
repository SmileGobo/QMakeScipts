defineTest(ConsoleApplication){
    TEMPLATE = app
    export(TEMPLATE)

    QT -= core gui qt
    export(QT)

    CONFIG += console
    CONFIG -= app_bundle qt
    export(CONFIG)

    TARGET = $$1
    isEmpty(TARGET){
        warning(ConsoleApplication: no specifeid application name)
        return (false)
    }
    export(TARGET)

    DESTDIR = $$BIN_DIR
    export(DESTDIR)
    OBJECTS_DIR = $$OBJ_DIR/$${TARGET}/$$BUILD_TYPE
    !exists($$OBJECT_DIR/){
        mkpath($$OBJECT_DIR)
    }
    export(OBJECTS_DIR)

    QMAKE_CLEAN+= -r $${DESTDIR}/$${TARGET}
    export(QMAKE_CLEAN)


    SetHeadersPath(./include)    #доступ модуля к своим заголовочным файлам
    SetLibraryPath($$LIB_DIR)    #приоритет локальным библиотекам 

    return (true)
}
defineTest(StaticLibrary){
    MODULE_NAME = $$1
    export(MODULE_NAME) #грязный чит

    QT       -= core gui qt
    TEMPLATE = lib
    CONFIG  += staticlib
    CONFIG -= qt
    export(QT)
    export(TEMPLATE)
    export(CONFIG)

    DESTDIR = $$LIB_DIR #так как статическая либа складываем ее в дирректорию с библиотеками
    export(DESTDIR)

    OBJECTS_DIR = $$OBJ_DIR/$${MODULE_NAME}/$${BUILD_TYPE}
    !exists($$OBJECT_DIR/){
        mkpath($$OBJECT_DIR)
    }
    export(OBJECTS_DIR)

    TARGET=$${MODULE_NAME}$${LIB_SUFFIX}
    export(TARGET)

    win32{
        QMAKE_CLEAN += -r $${DESTDIR}/$${TARGET}.lib
    }

    unix{
        QMAKE_CLEAN += -r $${DESTDIR}/lib$${TARGET}.a
    }

    export(QMAKE_CLEAN)

    INCLUDEPATH += ./include
    export(INCLUDEPATH)

    return (true)
}

#Обявляет проект модуля с тестом, если передать имя теста
#$1 - Имя теста, если пусто не сгенерирует добавление проекта теста
defineTest(Module){
    TEST_NAME=$$1
    TEMPLATE = subdirs

    CONFIG -= app_bundle
    CONFIG -= qt
    CONFIG += ordered


    SUBDIRS += Module

    !isEmpty(TEST_NAME){
        contains(TEST_ENABLE, $$TEST_NAME){
            SUBDIRS += $$TEST_NAME
        }
    }

    export(TEMPLATE)
    export(CONFIG)
    export(SUBDIRS)
}
defineTest(Subdirs){
    TEMPLATE = subdirs

    CONFIG -= app_bundle
    CONFIG -= qt
    CONFIG += ordered

    export(CONFIG)
    return (true)
}
