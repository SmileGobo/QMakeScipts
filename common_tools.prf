load(common/project_tools)
load(common/depend_tools)

#общие библиотеки

#инициализация вызвать в начале проекта
#пока используется include(settings.pri)
defineTest(Init){
    BASE_PATH = $$1
    isEmpty(BASE_PATH){
        error(Init function: not target BASE_PATH)
    }
    CONFIG += no_include_pwd
    CONFIG += C++11

    CONFIG(debug, debug|release) {
        BUILD_TYPE=debug
        DEFINES+= _DEBUG        # в коде тоже должны знать что у нас отладка
        LIB_SUFFIX=d
    } else {
        LIB_SUFFIX=                 #суффикс для библиотек d - для дебаг и пустой для release
        BUILD_TYPE=release          #тип сборки отладочная или релизная
    }
    #настройки проекта глобальные
    #базовая дирректория может быть переопределена в user_settings

    BUILD_PATH=$$absolute_path($${BASE_PATH}/$$_TARGET)

    LIB_DIR=$$BUILD_PATH/lib     #дирректория для складирования модулей подсистем
    OBJ_DIR=$$BUILD_PATH/obj     #дирректория для разделеной линковки подсистем и тестов и приложений
    BIN_DIR=$$BUILD_PATH/bin     #дира для исполняемых файлов


    win32{
        DEFINES+=WIN32_
        QMAKE_CXXFLAGS += /wd4482  #отключает некорректный варининг в 10 студии
    }

    #если есть пользовательские настройки подключаем
    USER_SETTINGS = $${BASE_PATH}/../user_settings.pri
    exists($$USER_SETTINGS){
        include($$USER_SETTINGS)
    }
    export(CONFIG)
    export(BUILD_PATH)
    export(DEFINES)
    export(QMAKE_CXXFLAGS)
    export(BUILD_TYPE)
    export(LIB_SUFFIX)
    export(BIN_DIR)
    export(OBJ_DIR)
    export(LIB_DIR)

    return (true)
}

#Цель make install 
# параметр 1 - путь
defineTest(SetInstall){
    PATH = $$1
    #library
    target.path = $$PATH
    target.files = $$TARGET

    INSTALLS += headers
    export(INSTALLS)
    return (true)
}


#Копирование заголовочных файлов
#Копирует в билд диру в include/<имя_модуля> все хидеры модуля
defineTest(CopyHeaders){

    INC_PATH = $$BUILD_PATH/include/$$MODULE_NAME
    !exists($$INC_PATH){
        system($$QMAKE_MKDIR $$INC_PATH)
    }

    CLEAN_COMMAND = $$QMAKE_DEL_FILE $$INC_PATH/*
    system($$CLEAN_COMMAND)

    COPY_COMMAND = $$QMAKE_COPY ./include/* $$INC_PATH -r
    system($$COPY_COMMAND)

    #QMAKE_EXTRA_TARGETS += mytarget
    #export(QMAKE_EXTRA_TARGETS)
    return (true)
}
